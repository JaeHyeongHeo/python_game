import pygame
import sys
import math
import random
import tkinter
import time
from pygame.locals import *

BLACK = (0, 0, 0)
SILVER = (192, 208, 224)
RED = (255, 0, 0)
CYAN = (0, 224, 255)

Level = 0
pnum = 0
idx = 0
tmr = 0
score = 0
bg_y = 0

ss_x = 0
ss_y = 0
ss_hp = 0
ss_strong = 0
key_spc = 0
key_z = 0

MISSILE_MAX = 200
msl_no = 0
msl_f = [False] * MISSILE_MAX
msl_x = [0] * MISSILE_MAX
msl_y = [0] * MISSILE_MAX
msl_a = [0] * MISSILE_MAX

ENEMY_MAX = 100
emy_no = 0
emy_f = [False] * ENEMY_MAX
emy_x = [0] * ENEMY_MAX
emy_y = [0] * ENEMY_MAX
emy_a = [0] * ENEMY_MAX
emy_type = [0] * ENEMY_MAX
emy_speed = [0] * ENEMY_MAX

EMY_BULLET = 0
LINE_T = -80
LINE_B = 800
LINE_L = -80
LINE_R = 1040

EFFECT_MAX = 100
eff_no = 0
eff_p = [0] * EFFECT_MAX
eff_x = [0] * EFFECT_MAX
eff_y = [0] * EFFECT_MAX
    
def game_main():
    global Level, tmr
    tmr = tmr + 1

    if Level == 0:
        if tmr == 1:
            for i in range(100):
                canvas.create_image(600, 340, image=keyimage, tag="KIMAGE")
                canvas.update()
                time.sleep(0.5)
                canvas.delete("KIMAGE")
                canvas.update()
                time.sleep(0.5)
                if key=="space":
                    break

    root.after(100, game_main)

key = ""     #스토리코드
def key_down(e):
    global key
    key = e.keysym

def main_proc():  
    global pnum
    canvas.delete("PH")
    canvas.create_image(607, 343, image=photo[pnum], tag="PH")
    if key=="space":
        pnum=pnum+1
    root.after(3000, main_proc)
    
root = tkinter.Tk()
root.title("Shooting Game")
root.bind("<KeyPress>", key_down)
canvas = tkinter.Canvas(width=1200, height=680)
bg=tkinter.PhotoImage(file="bg_galaxy.png")
canvas.create_image(600, 340, image=bg)
keyimage = tkinter.PhotoImage(file="kimage.png")

canvas.pack()

photo=[
    tkinter.PhotoImage(file="1.png"),
    tkinter.PhotoImage(file="2.png"),
    tkinter.PhotoImage(file="3.png"),
    tkinter.PhotoImage(file="4.png"),
    tkinter.PhotoImage(file="5.png"),
    tkinter.PhotoImage(file="6.png"),
    tkinter.PhotoImage(file="7.png")
]

game_main()
main_proc()
root.mainloop()

# 이미지 로딩
img_galaxy = pygame.image.load("galaxy.png")
img_sship = [
    pygame.image.load("spaceship.png"),
]
img_weapon = pygame.image.load("bullet.png")
img_enemy = [
    pygame.image.load("enemy0.png"),
    pygame.image.load("enemy.png")
]
img_explode = [
    None,
    pygame.image.load("explosion1.png"),
    pygame.image.load("explosion2.png"),
    pygame.image.load("explosion3.png"),
    pygame.image.load("explosion4.png"),
    pygame.image.load("explosion5.png")
]
img_title = [
    pygame.image.load("galaxy1.png")
]


def get_dis(x1, y1, x2, y2):  # 두 점 사이 거리 계산
    return ((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))


def draw_text(scrn, txt, x, y, siz, col):  # 문자 표시
    fnt = pygame.font.Font(None, siz)
    sur = fnt.render(txt, True, col)
    x = x - sur.get_width() / 2
    y = y - sur.get_height() / 2
    scrn.blit(sur, [x, y])


def move_starship(scrn, key):  # 플레이어 기체 이동
    global idx, tmr, ss_x, ss_y, ss_hp, ss_strong, key_spc, key_z
  
    if key[K_LEFT] == 1:
        ss_x = ss_x - 20
        if ss_x < 40:
            ss_x = 40
    if key[K_RIGHT] == 1:
        ss_x = ss_x + 20
        if ss_x > 920:
            ss_x = 920
    key_spc = (key_spc + 1) * key[K_SPACE]
    if key_spc % 5 == 1:
        set_missile()
        ss_hp = ss_hp - 20

    if ss_strong % 2 == 0:
        scrn.blit(img_sship[ss_d], [ss_x - 37, ss_y - 48])

    if ss_strong > 0:
        ss_strong = ss_strong - 1
        return
    
    elif idx == 1:
        for i in range(ENEMY_MAX):  # 적 기체와 히트 체크
            if emy_f[i] == True:
                w = img_enemy[emy_type[i]].get_width()
                h = img_enemy[emy_type[i]].get_height()
                r = int((w + h) / 4 + (74 + 96) / 4)
                if get_dis(emy_x[i], emy_y[i], ss_x, ss_y) < r * r:
                    set_effect(ss_x, ss_y)
                    ss_hp = ss_hp - 100
                    if ss_hp <= 0:
                        ss_hp = 0
                        idx = 2
                        tmr = 0
                    if ss_strong == 0:
                        ss_strong = 60
                    emy_f[i] = False


def set_missile():  # 플레이어 기체 발사 탄환 설정
    global msl_no
    msl_f[msl_no] = True
    msl_x[msl_no] = ss_x
    msl_y[msl_no] = ss_y - 50
    msl_a[msl_no] = 270
    msl_no = (msl_no + 1) % MISSILE_MAX

def move_missile(scrn):  # 탄환 이동
    for i in range(MISSILE_MAX):
        if msl_f[i] == True:
            msl_y[i] = msl_y[i] - 36
            scrn.blit(img_weapon, [msl_x[i] - 10, msl_y[i] - 32])
            if msl_y[i] < 0:
                msl_f[i] = False

def bring_enemy():  # 적 기체 등장
    if tmr % 10 == 0:
        set_enemy1(random.randint(20, 940), LINE_T, 90, 1, 10)
    if tmr % 15  == 0:
        set_enemy2(random.randint(20, 940), LINE_T, 80, 1, 8)
    
def set_enemy1(x, y, a, ty, sp):  # 적 기체 설정1
    global emy_no
    while True:
        if emy_f[emy_no] == False:
            emy_f[emy_no] = True
            emy_x[emy_no] = x
            emy_y[emy_no] = y
            emy_a[emy_no] = a
            emy_type[emy_no] = ty
            emy_speed[emy_no] = sp
            break
        emy_no = (emy_no + 1) % ENEMY_MAX

def set_enemy2(x, y, a, ty, sp):  # 적 기체 설정2
    global emy_no
    while True:
        if emy_f[emy_no] == False:
            emy_f[emy_no] = True
            emy_x[emy_no] = x
            emy_y[emy_no] = y
            emy_a[emy_no] = a
            emy_type[emy_no] = ty
            emy_speed[emy_no] = sp
            break
        emy_no = (emy_no + 1) % ENEMY_MAX


def move_enemy(scrn):  # 적 기체 이동
    global idx, tmr, score, ss_hp
    for i in range(ENEMY_MAX):
        if emy_f[i] == True:
            ang = -90 - emy_a[i]
            png = emy_type[i]
            emy_x[i] = emy_x[i] + emy_speed[i] * math.cos(math.radians(emy_a[i]))
            emy_y[i] = emy_y[i] + emy_speed[i] * math.sin(math.radians(emy_a[i]))
            
            if emy_x[i] < LINE_L or LINE_R < emy_x[i] or emy_y[i] < LINE_T or LINE_B < emy_y[i]:
                emy_f[i] = False

            if emy_type[i] != EMY_BULLET:  # 플레이어 기체 발사 탄환과 히트 체크
                w = img_enemy[emy_type[i]].get_width()
                h = img_enemy[emy_type[i]].get_height()
                r = int((w + h) / 4) + 12
                for n in range(MISSILE_MAX):
                    if msl_f[n] == True and get_dis(emy_x[i], emy_y[i], msl_x[n], msl_y[n]) < r * r:
                        msl_f[n] = False
                        set_effect(emy_x[i], emy_y[i])
                        score = score + 100
                        emy_f[i] = False

            img_rz = pygame.transform.rotozoom(img_enemy[png], ang, 1.0)
            scrn.blit(img_rz, [emy_x[i] - img_rz.get_width() / 2, emy_y[i] - img_rz.get_height() / 2])


def set_effect(x, y):  # 폭발 설정
    global eff_no
    eff_p[eff_no] = 1
    eff_x[eff_no] = x
    eff_y[eff_no] = y
    eff_no = (eff_no + 1) % EFFECT_MAX


def draw_effect(scrn):  # 폭발 연출
    for i in range(EFFECT_MAX):
        if eff_p[i] > 0:
            scrn.blit(img_explode[eff_p[i]], [eff_x[i] - 48, eff_y[i] - 48])
            eff_p[i] = eff_p[i] + 1
            if eff_p[i] == 6:
                eff_p[i] = 0


def main():  # 메인 루프
    global idx, tmr, score, bg_y, ss_x, ss_y, ss_d, ss_hp

    pygame.init()
    pygame.display.set_caption("Galaxy Lancer")
    screen = pygame.display.set_mode((960, 720))
    clock = pygame.time.Clock()

    while True:
        tmr = tmr + 1
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()

        # 배경 스크롤
        bg_y = (bg_y + 5) % 720
        screen.blit(img_galaxy, [0, bg_y - 720])
        screen.blit(img_galaxy, [0, bg_y])

        key = pygame.key.get_pressed()

        if idx == 0:  # 타이틀
            screen.blit(img_title[0], [0,0])
            draw_text(screen, "Press [SPACE] to start!", 480, 600, 50, SILVER)
            if key[K_SPACE] == 1:
                idx = 1
                tmr = 0
                score = 0
                ss_x = 480
                ss_y = 600
                ss_d = 0
                ss_hp = 100
                for i in range(ENEMY_MAX):
                    emy_f[i] = False
                for i in range(MISSILE_MAX):
                    msl_f[i] = False

        if idx == 1:  # 게임 플레이 중
            move_starship(screen, key)
            move_missile(screen)
            bring_enemy()
            move_enemy(screen)
            if tmr == 30 * 60:
                idx = 3
                tmr = 0

        if idx == 2:  # 게임 오버
            move_missile(screen)
            move_enemy(screen)
            draw_text(screen, "GAME OVER", 480, 300, 80, RED)
            if tmr == 150:
                idx = 0
                tmr = 0

        if idx == 3:  # 게임 클리어
            move_starship(screen, key)
            move_missile(screen)
            draw_text(screen, "GAME CLEAR", 480, 300, 80, SILVER)
            if tmr == 150:
                idx = 0
                tmr = 0

        draw_effect(screen)  # 폭발 연출
        draw_text(screen, "SCORE " + str(score), 200, 30, 50, SILVER)

        pygame.display.update()
        clock.tick(30)


if __name__ == '__main__':
    main()